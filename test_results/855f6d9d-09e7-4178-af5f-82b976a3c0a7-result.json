{"name": "test_full_order", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c596634532=\"\" pbutton=\"\" type=\"button\" luautotestlocator=\"checkout-make-order\" class=\"p-element submit large w-100 p-button p-component p-disabled p-button-loading\" automation-id=\"checkout-make-order\">...</button> is not clickable at point (1192, 678). Other element would receive the click: <lu-info-actions _ngcontent-ng-c1364996988=\"\" luaddclassonmobilesticky=\"\" _nghost-ng-c596634532=\"\" class=\"ng-star-inserted should-pin is-pinned\">...</lu-info-actions>\n  (Session info: chrome=132.0.6834.162)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6902180D5+2992373]\n\t(No symbol) [0x00007FF68FEABFD0]\n\t(No symbol) [0x00007FF68FD4590A]\n\t(No symbol) [0x00007FF68FDA0F2E]\n\t(No symbol) [0x00007FF68FD9E9CC]\n\t(No symbol) [0x00007FF68FD9BBA6]\n\t(No symbol) [0x00007FF68FD9AB01]\n\t(No symbol) [0x00007FF68FD8CD40]\n\t(No symbol) [0x00007FF68FDBF36A]\n\t(No symbol) [0x00007FF68FD8C596]\n\t(No symbol) [0x00007FF68FDBF580]\n\t(No symbol) [0x00007FF68FDDF584]\n\t(No symbol) [0x00007FF68FDBF113]\n\t(No symbol) [0x00007FF68FD8A918]\n\t(No symbol) [0x00007FF68FD8BA81]\n\tGetHandleVerifier [0x00007FF690276A2D+3379789]\n\tGetHandleVerifier [0x00007FF69028C32D+3468109]\n\tGetHandleVerifier [0x00007FF690280043+3418211]\n\tGetHandleVerifier [0x00007FF69000C78B+847787]\n\t(No symbol) [0x00007FF68FEB757F]\n\t(No symbol) [0x00007FF68FEB2FC4]\n\t(No symbol) [0x00007FF68FEB315D]\n\t(No symbol) [0x00007FF68FEA2979]\n\tBaseThreadInitThunk [0x00007FF8DF07259D+29]\n\tRtlUserThreadStart [0x00007FF8E002AF38+40]", "trace": "set_up = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c5aa36e64798d0ab7b886c4bd79dec3\")>\n\n    @pytest.mark.smoke\n    @allure.description(\"Создание заказа с добавлением товара через избранное\")\n    def test_full_order(set_up):\n        driver = set_up\n    \n        login = LoginPage(driver)\n        login.auth()\n        login.choose_delivery()\n    \n        fav = Favorite(driver)\n        fav.add_to_cart_favorite()\n    \n        checkout = Checkout(driver)\n>       order_number = checkout.complete_order()\n\ntests\\test_create_delivery_order.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\finish_order.py:80: in complete_order\n    self.click_checkout_make_order()\npages\\finish_order.py:48: in click_checkout_make_order\n    self.get_checkout_make_order().click()\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000161145BC5B0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF68FEA2979]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8DF07259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF8E002AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c596634532=\"\" pbutton=\"\" type=\"button\" luautotestlocator=\"checkout-make-order\" class=\"p-element submit large w-100 p-button p-component p-disabled p-button-loading\" automation-id=\"checkout-make-order\">...</button> is not clickable at point (1192, 678). Other element would receive the click: <lu-info-actions _ngcontent-ng-c1364996988=\"\" luaddclassonmobilesticky=\"\" _nghost-ng-c596634532=\"\" class=\"ng-star-inserted should-pin is-pinned\">...</lu-info-actions>\nE         (Session info: chrome=132.0.6834.162)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6902180D5+2992373]\nE       \t(No symbol) [0x00007FF68FEABFD0]\nE       \t(No symbol) [0x00007FF68FD4590A]\nE       \t(No symbol) [0x00007FF68FDA0F2E]\nE       \t(No symbol) [0x00007FF68FD9E9CC]\nE       \t(No symbol) [0x00007FF68FD9BBA6]\nE       \t(No symbol) [0x00007FF68FD9AB01]\nE       \t(No symbol) [0x00007FF68FD8CD40]\nE       \t(No symbol) [0x00007FF68FDBF36A]\nE       \t(No symbol) [0x00007FF68FD8C596]\nE       \t(No symbol) [0x00007FF68FDBF580]\nE       \t(No symbol) [0x00007FF68FDDF584]\nE       \t(No symbol) [0x00007FF68FDBF113]\nE       \t(No symbol) [0x00007FF68FD8A918]\nE       \t(No symbol) [0x00007FF68FD8BA81]\nE       \tGetHandleVerifier [0x00007FF690276A2D+3379789]\nE       \tGetHandleVerifier [0x00007FF69028C32D+3468109]\nE       \tGetHandleVerifier [0x00007FF690280043+3418211]\nE       \tGetHandleVerifier [0x00007FF69000C78B+847787]\nE       \t(No symbol) [0x00007FF68FEB757F]\nE       \t(No symbol) [0x00007FF68FEB2FC4]\nE       \t(No symbol) [0x00007FF68FEB315D]\nE       \t(No symbol) [0x00007FF68FEA2979]\nE       \tBaseThreadInitThunk [0x00007FF8DF07259D+29]\nE       \tRtlUserThreadStart [0x00007FF8E002AF38+40]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Создание заказа с добавлением товара через избранное", "steps": [{"name": "Авторизация пользователя", "status": "passed", "start": 1739998138164, "stop": 1739998150620}, {"name": "Выбор доставки", "status": "passed", "start": 1739998150620, "stop": 1739998150803}, {"name": "Добавляет товар из избранного в корзину", "status": "passed", "start": 1739998150803, "stop": 1739998157568}, {"name": "Проходит весь процесс оформления заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c596634532=\"\" pbutton=\"\" type=\"button\" luautotestlocator=\"checkout-make-order\" class=\"p-element submit large w-100 p-button p-component p-disabled p-button-loading\" automation-id=\"checkout-make-order\">...</button> is not clickable at point (1192, 678). Other element would receive the click: <lu-info-actions _ngcontent-ng-c1364996988=\"\" luaddclassonmobilesticky=\"\" _nghost-ng-c596634532=\"\" class=\"ng-star-inserted should-pin is-pinned\">...</lu-info-actions>\n  (Session info: chrome=132.0.6834.162)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6902180D5+2992373]\n\t(No symbol) [0x00007FF68FEABFD0]\n\t(No symbol) [0x00007FF68FD4590A]\n\t(No symbol) [0x00007FF68FDA0F2E]\n\t(No symbol) [0x00007FF68FD9E9CC]\n\t(No symbol) [0x00007FF68FD9BBA6]\n\t(No symbol) [0x00007FF68FD9AB01]\n\t(No symbol) [0x00007FF68FD8CD40]\n\t(No symbol) [0x00007FF68FDBF36A]\n\t(No symbol) [0x00007FF68FD8C596]\n\t(No symbol) [0x00007FF68FDBF580]\n\t(No symbol) [0x00007FF68FDDF584]\n\t(No symbol) [0x00007FF68FDBF113]\n\t(No symbol) [0x00007FF68FD8A918]\n\t(No symbol) [0x00007FF68FD8BA81]\n\tGetHandleVerifier [0x00007FF690276A2D+3379789]\n\tGetHandleVerifier [0x00007FF69028C32D+3468109]\n\tGetHandleVerifier [0x00007FF690280043+3418211]\n\tGetHandleVerifier [0x00007FF69000C78B+847787]\n\t(No symbol) [0x00007FF68FEB757F]\n\t(No symbol) [0x00007FF68FEB2FC4]\n\t(No symbol) [0x00007FF68FEB315D]\n\t(No symbol) [0x00007FF68FEA2979]\n\tBaseThreadInitThunk [0x00007FF8DF07259D+29]\n\tRtlUserThreadStart [0x00007FF8E002AF38+40]\n\n", "trace": "  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\pages\\finish_order.py\", line 80, in complete_order\n    self.click_checkout_make_order()\n  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\pages\\finish_order.py\", line 48, in click_checkout_make_order\n    self.get_checkout_make_order().click()\n  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 570, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\golik\\PycharmProjects\\lentaProject\\.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1739998157568, "stop": 1739998170222}], "attachments": [{"name": "stdout", "source": "4acbd1e9-0a74-4aa9-9747-047bb35f71a9-attachment.txt", "type": "text/plain"}], "start": 1739998138163, "stop": 1739998170229, "uuid": "d42d205d-cdc7-4f7e-9e46-6e71135ff508", "historyId": "0d4aed2b781a8233f5801c9435a0dc21", "testCaseId": "0d4aed2b781a8233f5801c9435a0dc21", "fullName": "tests.test_create_delivery_order#test_full_order", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_delivery_order"}, {"name": "host", "value": "LAPTOP-0IQ88JU5"}, {"name": "thread", "value": "37160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_delivery_order"}]}